package mvctemplate.view;

import java.io.IOException;
import java.util.List;

import javax.swing.JOptionPane;

import mvctemplate.model.Model;
import util.parser.Command;
import util.parser.UserInterruptException;

public class SwingView extends javax.swing.JFrame implements View {
	

	    
	/** Creates new form CelsiusConverterGUI */
	public SwingView() {
	        initComponents();
	}
	    
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
		tempTextField = new javax.swing.JTextField();
		celsiusLabel = new javax.swing.JLabel();
		convertButton = new javax.swing.JButton();
		fahrenheitLabel = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Celsius Converter");

		celsiusLabel.setText("Celsius");

		convertButton.setText("Convert");
		convertButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				convertButtonActionPerformed(evt);
	            	}
	        	});

		fahrenheitLabel.setText("Fahrenheit");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            	.addGroup(layout.createSequentialGroup()
	            			.addContainerGap()
	                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	                    .addGroup(layout.createSequentialGroup()
	                        .addComponent(tempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
	                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                        .addComponent(celsiusLabel))
	                    .addGroup(layout.createSequentialGroup()
	                        .addComponent(convertButton)
	                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                        .addComponent(fahrenheitLabel)))
	                .addContainerGap(27, Short.MAX_VALUE))
	        );

	        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {convertButton, tempTextField});

	        layout.setVerticalGroup(
	            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addContainerGap()
	                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
	                    .addComponent(tempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addComponent(celsiusLabel))
	                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
	                    .addComponent(convertButton)
	                    .addComponent(fahrenheitLabel))
	                .addContainerGap(21, Short.MAX_VALUE))
	        );
	        pack();
	   	}// </editor-fold>//GEN-END:initComponents

	private void convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertButtonActionPerformed
		//Parse degrees Celsius as a double and convert to Fahrenheit
		int tempFahr = (int)((Double.parseDouble(tempTextField.getText())) * 1.8 + 32);
    	fahrenheitLabel.setText(tempFahr + " Fahrenheit");
    }//GEN-LAST:event_convertButtonActionPerformed
	    
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new SwingView().setVisible(true);
    	}});
	}
	    
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel celsiusLabel;
	private javax.swing.JButton convertButton;
	private javax.swing.JLabel fahrenheitLabel;
	private javax.swing.JTextField tempTextField;
	// End of variables declaration//GEN-END:variables
	    
	

	
	

	@Override
	public void messageToUser(Object actualString) {
		JOptionPane.showMessageDialog(this, actualString);

	}

	@Override
	public String askQuestion(Object question) throws IOException, UserInterruptException {
		String answer = JOptionPane.showInputDialog(this, question);
		if (answer == null)
			throw new UserInterruptException();
		
		return answer;
	}

	@Override
	public boolean askYesnoQuestion(String question) throws IOException, UserInterruptException {
		int answer = JOptionPane.showConfirmDialog(this, question);
		if (answer == JOptionPane.YES_OPTION)
			return true;
		if (answer == JOptionPane.NO_OPTION)
			return false;
		if (answer == JOptionPane.CANCEL_OPTION)
			throw new UserInterruptException();
		return false;
	}

	@Override
	public void startMessage() {

	}

	@Override
	public void addChoice(Command command) {
		// TODO Auto-generated method stub


	}

	@Override
	public String showChoices() throws IOException {
		// TODO Auto-generated method stub
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return "help";
	}

	@Override
	public void showStatus(Model model) {
		// TODO Auto-generated method stub
		

	}

	@Override
	public void printControlScheme(List<Command> commandList) {
		// TODO Auto-generated method stub
		JOptionPane.showMessageDialog(this, "The Control Scheme");

	}

}
